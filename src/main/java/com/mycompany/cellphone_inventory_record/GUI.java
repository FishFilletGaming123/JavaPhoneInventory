/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author user
 */
import javax.swing.JOptionPane;
import java.io.*;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.*;

public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
    initComponents(); // Initialize GUI components including JComboBox
    BrandComboBox(); // Populate JComboBox with brand values
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CreateDTB = new javax.swing.JButton();
        SaveBtn = new javax.swing.JButton();
        UpdateBtn = new javax.swing.JButton();
        DeleteBtn = new javax.swing.JButton();
        DisplayBtn = new javax.swing.JButton();
        SearchBtn = new javax.swing.JButton();
        ExitBtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        ModelTextField = new javax.swing.JTextField();
        ScreenSizeTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        ProcessorTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        QuantityTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        BrandTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        ColorTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        StorageCapacityTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        CameraTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        PriceTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        WarrantyTextField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        RecordsTable = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CreateDTB.setText("Create Database");
        CreateDTB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CreateDTBMouseClicked(evt);
            }
        });
        CreateDTB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateDTBActionPerformed(evt);
            }
        });

        SaveBtn.setText("Save Record");
        SaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveBtnActionPerformed(evt);
            }
        });

        UpdateBtn.setText("Update Record");
        UpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateBtnActionPerformed(evt);
            }
        });

        DeleteBtn.setText("Delete Record");
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });

        DisplayBtn.setText("Display All Record");
        DisplayBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayBtnActionPerformed(evt);
            }
        });

        SearchBtn.setText("Search Record");
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });

        ExitBtn.setText("Exit");
        ExitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitBtnActionPerformed(evt);
            }
        });

        jLabel2.setText("Model:");

        ModelTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModelTextFieldActionPerformed(evt);
            }
        });

        ScreenSizeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScreenSizeTextFieldActionPerformed(evt);
            }
        });

        jLabel5.setText("ScreenSize:");

        jLabel7.setText("Processor:");

        ProcessorTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcessorTextFieldActionPerformed(evt);
            }
        });

        jLabel9.setText("Quantity: ");

        QuantityTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuantityTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("Brand:");

        BrandTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrandTextFieldActionPerformed(evt);
            }
        });

        jLabel3.setText("Color:");

        ColorTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ColorTextFieldActionPerformed(evt);
            }
        });

        jLabel4.setText("Storage_Capacity:");

        StorageCapacityTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StorageCapacityTextFieldActionPerformed(evt);
            }
        });

        jLabel6.setText("Camere Resolution:");

        CameraTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CameraTextFieldActionPerformed(evt);
            }
        });

        jLabel8.setText("Price: ");

        PriceTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PriceTextFieldActionPerformed(evt);
            }
        });

        jLabel10.setText("Warranty:");

        WarrantyTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WarrantyTextFieldActionPerformed(evt);
            }
        });

        RecordsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        RecordsTable.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                RecordsTableComponentAdded(evt);
            }
        });
        jScrollPane1.setViewportView(RecordsTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(86, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(BrandTextField)
                                .addComponent(ModelTextField)
                                .addComponent(ScreenSizeTextField)
                                .addComponent(ProcessorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(QuantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CameraTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ColorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(StorageCapacityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(WarrantyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BrandTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ModelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ScreenSizeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ProcessorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(QuantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(WarrantyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(ColorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(StorageCapacityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CameraTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)))))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jSeparator1)
                .addGap(178, 178, 178))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(SaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ExitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CreateDTB, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(UpdateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(DisplayBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(DeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UpdateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DisplayBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CreateDTB, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ExitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    ///////////BUTTONS HERE///////////////////////
    private void SaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveBtnActionPerformed
        // THIS IS WHERE THE SAVE RECORD FUNCTION IS
        SaveRecords(evt);
    }//GEN-LAST:event_SaveBtnActionPerformed

    private void UpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateBtnActionPerformed
        // THIS IS WHERE THE UPDATE RECORD FUNCTION IS
        UpdateRecords(evt);
    }//GEN-LAST:event_UpdateBtnActionPerformed

    private void CreateDTBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateDTBActionPerformed
        // THIS IS WHERE THE CREATE DATABASE FUNCTION IS
        CreateDatabase(evt);         
    }//GEN-LAST:event_CreateDTBActionPerformed

    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed
        // THIS IS WHERE THE DELETE RECORD FUNCTION IS
        DeleteRecords(evt);
    }//GEN-LAST:event_DeleteBtnActionPerformed

    private void DisplayBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayBtnActionPerformed
        // THIS IS WHERE THE DISPLAY ALL RECORDS FUNCTION IS
        DisplayAllRecords(evt);
    }//GEN-LAST:event_DisplayBtnActionPerformed

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        // THIS IS WHERE THE SEARCH RECORD FUNCTION IS
        SearchRecord(evt);
    }//GEN-LAST:event_SearchBtnActionPerformed

    private void ExitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitBtnActionPerformed
        // THIS IS WHERE THE EXIT BUTTON ISFUNCTION IS
        ExitSystem(evt);
        
    }//GEN-LAST:event_ExitBtnActionPerformed
    
    ///////////TEXT INPUTS HERE///////////////////////
    private void BrandTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrandTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BrandTextFieldActionPerformed

    private void ModelTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModelTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ModelTextFieldActionPerformed

    private void ColorTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ColorTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ColorTextFieldActionPerformed

    private void StorageCapacityTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StorageCapacityTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StorageCapacityTextFieldActionPerformed

    private void ScreenSizeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScreenSizeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ScreenSizeTextFieldActionPerformed

    private void CameraTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CameraTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CameraTextFieldActionPerformed

    private void ProcessorTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcessorTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProcessorTextFieldActionPerformed

    private void PriceTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PriceTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PriceTextFieldActionPerformed

    private void QuantityTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuantityTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_QuantityTextFieldActionPerformed

    private void WarrantyTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WarrantyTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_WarrantyTextFieldActionPerformed

    private void CreateDTBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CreateDTBMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_CreateDTBMouseClicked

    private void RecordsTableComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_RecordsTableComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_RecordsTableComponentAdded

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
     ComboBoxSelection();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    
    ///////////FUNCTIONS///////////////////////
    
    //This is the code that populates brandcombobox with the values of brands
    private void BrandComboBox() {
    jComboBox1.removeAllItems();
    Set<String> brands = new HashSet<>();

    // This section here reads the brand values from the StorageDB.txt
    try (BufferedReader reader = new BufferedReader(new FileReader("StorageDB.txt"))) {
        String line;
        while ((line = reader.readLine()) != null) {
            // Basically the seperator based on the instructions
            String[] splits = line.split(",");
            if (splits.length > 0) {
                String brand = splits[0].trim();
                brands.add(brand);
            }
        }
    } catch (IOException ex) {
        ex.printStackTrace();
    }

    //  Add items to the jComboBox
    for (String brand : brands) {
        jComboBox1.addItem(brand);
    }
}
    
    private void ComboBoxSelection() {
    // Gets the selected brand from the jComboBox
    String selectedBrand = (String) jComboBox1.getSelectedItem();

    // This section here reads the brand values from the StorageDB.txt
    try (BufferedReader reader = new BufferedReader(new FileReader("StorageDB.txt"))) {
        String line;
        while ((line = reader.readLine()) != null) {
            // Basically the seperator based on the instructions
            String[] splits = line.split(",");
            if (splits.length > 0 && splits[0].trim().equals(selectedBrand)) {
                // So that when a user selects a Brand the values of it will be displayed inside the TextFields
                BrandTextField.setText(splits[0].trim());
                ModelTextField.setText(splits[1].trim());
                ColorTextField.setText(splits[2].trim());
                StorageCapacityTextField.setText(splits[3].trim());
                ScreenSizeTextField.setText(splits[4].trim());
                CameraTextField.setText(splits[5].trim());
                ProcessorTextField.setText(splits[6].trim());
                PriceTextField.setText(splits[7].trim());
                QuantityTextField.setText(splits[8].trim());
                WarrantyTextField.setText(splits[9].trim());
                break; 
            }
        }
    } catch (IOException ex) {
        ex.printStackTrace();
    }
}
    
    private void CreateDatabase(java.awt.event.ActionEvent evt) {
    File file = new File("StorageDB.txt");
    if (file.exists()) {
        JOptionPane.showMessageDialog(this, "!!Database already exists!!", "Warning", JOptionPane.WARNING_MESSAGE);
    } else {
        try {
            file.createNewFile();
            JOptionPane.showMessageDialog(this, "Database created successfully", "Successfully", JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error", "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }
}


private void SaveRecords(java.awt.event.ActionEvent evt) {
    // Get's the value from the textfields
    String brand = BrandTextField.getText();
    String model = ModelTextField.getText();
    String color = ColorTextField.getText();
    String storageCapacity = StorageCapacityTextField.getText();
    String screenSize = ScreenSizeTextField.getText();
    String camera = CameraTextField.getText();
    String processor = ProcessorTextField.getText();
    String price = PriceTextField.getText();
    String quantity = QuantityTextField.getText();
    String warranty = WarrantyTextField.getText();

    // check if a brand is selected in the JComboBox
    String comboBoxSelection = jComboBox1.getSelectedItem() != null ? jComboBox1.getSelectedItem().toString() : "";

    String storage = brand + "," + model + "," + color + "," + storageCapacity + "," + screenSize + "," +
                    camera + "," + processor + "," + price + "," + quantity + "," + warranty + "," + comboBoxSelection;

    // Write the record to the StorageDB.txt
    try (FileWriter writer = new FileWriter("StorageDB.txt", true)) {
        writer.write(storage + "\n");
        JOptionPane.showMessageDialog(this, "Record saved successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);

        // refresh the jcombobox with updated brand list
        BrandComboBox();
        
    } catch (IOException ex) {
        JOptionPane.showMessageDialog(this, "Error saving record to database!", "Error", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace();
    }
}

    private void UpdateRecords(java.awt.event.ActionEvent evt) {
    // Get's the value from the textfields
    String brand = BrandTextField.getText();
    String model = ModelTextField.getText();
    String color = ColorTextField.getText();
    String storageCapacity = StorageCapacityTextField.getText();
    String screenSize = ScreenSizeTextField.getText();
    String camera = CameraTextField.getText();
    String processor = ProcessorTextField.getText();
    String price = PriceTextField.getText();
    String quantity = QuantityTextField.getText();
    String warranty = WarrantyTextField.getText();
    String comboBoxSelection = jComboBox1.getSelectedItem().toString();

    String updatedStorage = brand + "," + model + "," + color + "," + storageCapacity + "," +
                           screenSize + "," + camera + "," + processor + "," + price + "," +
                           quantity + "," + warranty + "," + comboBoxSelection;

    try {
        // Read all records from the file
        List<String> records = Files.readAllLines(Paths.get("StorageDB.txt"));

        // This one finds the index of the record to update
        int index = -1;
        for (int i = 0; i < records.size(); i++) {
            if (records.get(i).startsWith(brand)) {
                index = i;
                break;
            }
        }

        if (index != -1) {
            // Update the record at the found index
            records.set(index, updatedStorage);

            // Write the updated records to the StorageDB.txt
            Files.write(Paths.get("StorageDB.txt"), records);

            JOptionPane.showMessageDialog(this, "Updated successfully!", "Successfully", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "No record has been found", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (IOException ex) {
        JOptionPane.showMessageDialog(this, "Error updating record!", "Error", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace();
    }
}
    
    
    
private void DeleteRecords(java.awt.event.ActionEvent evt) {
    // Reads the selected brand from the jcombobox
    String selectedBrand = (String) jComboBox1.getSelectedItem();

    // read all the values in the storageDB.txt
    try {
        List<String> records = Files.readAllLines(Paths.get("StorageDB.txt"));

        // remove records that are on the selceted brand
        records.removeIf(record -> record.startsWith(selectedBrand));

        // write the updated records back to the storagedb.txt
        Files.write(Paths.get("StorageDB.txt"), records);

        // refresh the jcombobox with updated brand list
        BrandComboBox();

        JOptionPane.showMessageDialog(this, "Records deleted successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
    } catch (IOException ex) {
        JOptionPane.showMessageDialog(this, "Error deleting records!", "Error", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace();
    }
}

    private void DisplayAllRecords(java.awt.event.ActionEvent evt) {
     //Reminding Hunch to put something in here pls lololol XD
    }

    private void SearchRecord(java.awt.event.ActionEvent evt) {
    //Reminding Hunch to put something in here pls lololol XD
    }

    private void ExitSystem(java.awt.event.ActionEvent evt) {
        //Exits the system
        System.exit(0);
    }


    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BrandTextField;
    private javax.swing.JTextField CameraTextField;
    private javax.swing.JTextField ColorTextField;
    private javax.swing.JButton CreateDTB;
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JButton DisplayBtn;
    private javax.swing.JButton ExitBtn;
    private javax.swing.JTextField ModelTextField;
    private javax.swing.JTextField PriceTextField;
    private javax.swing.JTextField ProcessorTextField;
    private javax.swing.JTextField QuantityTextField;
    private javax.swing.JTable RecordsTable;
    private javax.swing.JButton SaveBtn;
    private javax.swing.JTextField ScreenSizeTextField;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JTextField StorageCapacityTextField;
    private javax.swing.JButton UpdateBtn;
    private javax.swing.JTextField WarrantyTextField;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
